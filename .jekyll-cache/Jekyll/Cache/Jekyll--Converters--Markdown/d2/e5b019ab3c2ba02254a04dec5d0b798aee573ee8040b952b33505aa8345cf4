I"~1<h2 id="what-we-are-about-to-learn">What we are about to learn</h2>
<p>In This blog we will Discuss Various ways to Test Platform Events</p>

<h2 id="overview">Overview</h2>
<p>Platform Events are cool, fast, easy and optimized way to build an Integration between two sources with a real time sync. Platform events are easy to setup and publish as we discussed in our previous <a href="/Salesforce-spices/Setup-SF-PE-intro/">!blog</a>.</p>

<p>Testing out Platform events can be frustrated specially when events are used for Integration and you don’t have access to the Other system. So to find out what information events are actually publishing can be a headache for QA and Devs. But don’t worry I have gathered some of the best ways to test Platform Events. So lets start.</p>

<h2 id="the-easiest-and-cleanest-way">The Easiest and Cleanest way</h2>

<p>I have created a tool recently that can subscribe to the Platform Events along with Push Topics and can show the real time information when you events are published. The tool name is Platform Event Tester ( I love being straight forward ;) ) its easy to use and open source. The tool utilizes Oauth2.0 to Authorize the Org so its secure and no risk involved.</p>

<p>You can find the tool <a href="https://pe-tester.herokuapp.com/">!here</a>.</p>

<p>A video tutorial is below:</p>

<p><img src="/Salesforce-spices/assets/img/pe-tester-tutorial.gif" alt="Video tutorial PE-Tester" /></p>

<p>If you like this tool then you can support me on the repo <a href="https://github.com/AyuSharma-dev/PE-Tester">!here</a>.</p>

<h2 id="test-platform-events-using-apex-trigger">Test Platform Events using Apex Trigger</h2>

<p>Platform Events support After Trigger creation. So whenever the Platform Event published this Trigger will run and you can add System debugs here to debug the subscribed events detail that is passed on from another system.</p>

<p>You can use the below code as an example for Trigger.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="sr">//</span> <span class="no">Trigger</span> <span class="k">for</span> <span class="n">catching</span> <span class="no">Low_Ink</span> <span class="n">events</span><span class="p">.</span>
<span class="nf">trigger</span> <span class="no">LowInkTrigger</span> <span class="n">on</span> <span class="no">Low_Ink__e</span> <span class="p">(</span><span class="n">after</span> <span class="n">insert</span><span class="p">)</span> <span class="p">{</span>    
    <span class="sr">//</span> <span class="no">List</span> <span class="n">to</span> <span class="n">hold</span> <span class="n">all</span> <span class="n">cases</span> <span class="n">to</span> <span class="n">be</span> <span class="n">created</span><span class="o">.</span>
    <span class="no">List</span><span class="o">&lt;</span><span class="no">Case</span><span class="o">&gt;</span> <span class="n">cases</span> <span class="o">=</span> <span class="n">new</span> <span class="no">List</span><span class="o">&lt;</span><span class="no">Case</span><span class="o">&gt;</span><span class="p">();</span>
    
    <span class="sr">//</span> <span class="no">Get</span> <span class="n">user</span> <span class="no">Id</span> <span class="k">for</span> <span class="k">case</span> <span class="n">owner</span><span class="o">.</span> <span class="no">Replace</span> <span class="n">username</span> <span class="n">value</span> <span class="n">with</span> <span class="n">a</span> <span class="n">valid</span> <span class="n">value</span><span class="o">.</span>
    <span class="no">User</span> <span class="n">adminUser</span> <span class="o">=</span> <span class="p">[</span><span class="no">SELECT</span> <span class="no">Id</span> <span class="no">FROM</span> <span class="no">User</span> <span class="no">WHERE</span> <span class="no">Username</span><span class="o">=</span><span class="s1">'admin@acme.org'</span><span class="p">];</span>
       
    <span class="sr">//</span> <span class="no">Iterate</span> <span class="n">through</span> <span class="n">each</span> <span class="n">notification</span><span class="p">.</span>
    <span class="nf">for</span> <span class="p">(</span><span class="no">Low_Ink__e</span> <span class="n">event</span> <span class="p">:</span> <span class="no">Trigger</span><span class="o">.</span><span class="no">New</span><span class="p">)</span> <span class="p">{</span>
        <span class="no">System</span><span class="p">.</span><span class="nf">debug</span><span class="p">(</span><span class="s1">'Printer model: '</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="no">Printer_Model__c</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="no">Printer_Model__c</span> <span class="o">==</span> <span class="s1">'MN-123'</span><span class="p">)</span> <span class="p">{</span>
            <span class="sr">//</span> <span class="no">Create</span> <span class="no">Case</span> <span class="n">to</span> <span class="n">order</span> <span class="n">new</span> <span class="n">printer</span> <span class="n">cartridge</span><span class="o">.</span>
            <span class="no">Case</span> <span class="n">cs</span> <span class="o">=</span> <span class="n">new</span> <span class="no">Case</span><span class="p">();</span>
            <span class="n">cs</span><span class="o">.</span><span class="no">Priority</span> <span class="o">=</span> <span class="s1">'Medium'</span><span class="p">;</span>
            <span class="n">cs</span><span class="o">.</span><span class="no">Subject</span> <span class="o">=</span> <span class="s1">'Order new ink cartridge for SN '</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="no">Serial_Number__c</span><span class="p">;</span>
            <span class="sr">//</span> <span class="no">Optional</span><span class="p">:</span> <span class="no">Set</span> <span class="k">case</span> <span class="n">owner</span> <span class="no">ID</span> <span class="n">so</span> <span class="n">it</span> <span class="n">is</span> <span class="n">not</span> <span class="no">Automated</span> <span class="no">Process</span><span class="p">.</span>
            <span class="nf">/</span><span class="o">/</span> <span class="no">This</span> <span class="n">step</span> <span class="n">is</span> <span class="n">not</span> <span class="n">needed</span> <span class="k">if</span> <span class="n">the</span> <span class="n">running</span> <span class="n">user</span> <span class="n">is</span> <span class="n">overridden</span> 
            <span class="sr">//</span> <span class="n">or</span> <span class="k">if</span> <span class="n">using</span> <span class="n">assignment</span> <span class="n">rules</span><span class="p">.</span>
            <span class="nf">cs</span><span class="o">.</span><span class="no">OwnerId</span> <span class="o">=</span> <span class="n">adminUser</span><span class="o">.</span><span class="no">Id</span><span class="p">;</span>
            <span class="n">cases</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="n">cs</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="sr">//</span> <span class="no">Insert</span> <span class="n">all</span> <span class="n">cases</span> <span class="k">in</span> <span class="n">the</span> <span class="n">list</span><span class="p">.</span>
    <span class="nf">if</span> <span class="p">(</span><span class="n">cases</span><span class="p">.</span><span class="nf">size</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">insert</span> <span class="n">cases</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="test-platform-events-using-apex-t">Test Platform Events Using Apex T:</h2>

<p>To Publish a Platform Event we can utilize Apex Anonymous scripts. You can also use the same code to Publish Platform Event from your Apex Trigger and Batch.</p>

<p>Copy paste the below Script into your Developer Console Execute Apex Anonymous window
Here the Triggers related List show if you have created any Apex Triggers for the Platform Events. Platform Events only support After Insert Triggers. The Subscriptions list shows all the sources that have subscribed to this Events. This list will not show any Source that subscribe using CometId.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Database</span><span class="o">.</span><span class="no">SaveResult</span> <span class="n">result</span> <span class="o">=</span> <span class="no">EventBus</span><span class="p">.</span><span class="nf">publish</span><span class="p">(</span> <span class="n">new</span> <span class="no">Case__e</span><span class="p">(</span> <span class="no">Message__c</span><span class="o">=</span><span class="s1">'Test Message'</span> <span class="p">)</span> <span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="n">result</span><span class="p">.</span><span class="nf">isSuccess</span><span class="p">())</span> <span class="p">{</span>
    <span class="no">System</span><span class="p">.</span><span class="nf">debug</span><span class="p">(</span><span class="s1">'Successfully published event.'</span><span class="p">);</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="k">if</span><span class="p">(</span> <span class="n">result</span><span class="p">.</span><span class="nf">getErrors</span><span class="p">().</span><span class="nf">size</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">){</span>
        <span class="no">System</span><span class="p">.</span><span class="nf">debug</span><span class="p">(</span><span class="s1">'Error::'</span><span class="o">+</span><span class="n">result</span><span class="p">.</span><span class="nf">getErrors</span><span class="p">());</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Replace the Case__e with your Platform Event API name and provide any values for Message__c field. Now click on Execute. Check for Debug logs if it show shows success message then you Events are published successfully.</p>

<p>To checkout what information is published from your Platform event, we will discuss this in our next blog.</p>

<h2 id="platform-event-limitations">Platform Event Limitations</h2>

<p>While using the Events one should always take considerations over the Govern Limits provided by the Salesforce for creating and publishing Events. Following are some of those limits:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Description</th>
      <th style="text-align: center">Unlimited</th>
      <th style="text-align: center">Enterprise</th>
      <th>Developer</th>
      <th>Professional Edition</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Maximum number of platform event definitions that can be created in an org</td>
      <td style="text-align: center">100</td>
      <td style="text-align: center">50</td>
      <td>5</td>
      <td>5</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td style="text-align: center">Maximum number of concurrent CometD clients (subscribers) across all channels and for all event types</td>
      <td style="text-align: center">2000</td>
      <td style="text-align: center">1000</td>
      <td>20</td>
      <td>20</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td style="text-align: center">Maximum number of processes that can subscribe to a platform event</td>
      <td style="text-align: center">4000</td>
      <td style="text-align: center">4000</td>
      <td>4000</td>
      <td>5</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td style="text-align: center">Maximum number of active processes that can subscribe to a platform event</td>
      <td style="text-align: center">2000</td>
      <td style="text-align: center">2000</td>
      <td>2000</td>
      <td>5</td>
    </tr>
  </tbody>
</table>

<p>So as we have seen Platform events can be a great tool for Automated Integration but we should also keep an on all the Limits and also on if the requirement really needs Platform Events.</p>

<p>Thanks for Reading !!</p>
:ET